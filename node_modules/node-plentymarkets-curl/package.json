{
  "name": "node-plentymarkets-curl",
  "version": "0.0.2",
  "description": "A Plentymarkets Node Curl API",
  "main": "plentymarkets.js",
  "scripts": {
    "test": "grunt test"
  },
  "repository": {
    "type": "git",
    "url": "github.com:HeavyTuned/node-plentymarkets-curl.git"
  },
  "author": {
    "name": "Karol Kutrowski",
    "email": "it@heavy-tuned.de",
    "url": "https://www.heavy-tuned.de/"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/HeavyTuned/node-plentymarkets-curl/issues"
  },
  "dependencies": {
    "node-libcurl": "1.0.0",
    "limiter": "1.1.0",
    "prettyjson": "1.1.3"
  },
  "devDependencies": {
    "grunt": "^1.0.1",
    "grunt-contrib-jshint": "^1.0.0"
  },
  "readme": "# node-plentymarkets-curl\n[![license][license-image]][license-url]\n[![node][node-image]][node-url]\n\n[node-image]:https://img.shields.io/badge/node.js-%3E=_0.10-green.svg?style=flat-square\n[node-url]:https://nodejs.org/download/\n\n[license-image]:https://img.shields.io/github/license/JCMais/node-libcurl.svg?style=flat-square\n[license-url]:https://raw.githubusercontent.com/JCMais/node-libcurl/develop/LICENSE-MIT\nA Curl API for Plentymarkets-Backend\n\n## Install\n```npm install node-plentymarkets-curl --save```\n\n## Limits\nto prevent heavy load on the backend we're limiting the calls to one call per second - this should be enough for most use cases.\n\n## Login\neither you can call plenty.login(); before each start or let the script fire the request without logging in. This should result in an UINotLoggedInException exception if your cookie data is invalid.  \nThe API automatically relogs the user by calling login() and repeats your last call.  \nThe Backend automatically blocks the user after too many login attempts within a short time.\n\n## How do I get the required request parameters and url?\nYou can use your Chrome Developer Console and manually fire a request in your plantymarts backend and log it in the Networking / XHR section\n\n### Simple Request\n```javascript\nvar PlentyCurlAPI = require(\"node-plentymarkets-curl\");\nvar config = require('./config.js');\n\nvar plenty = new PlentyCurlAPI();\n\n\nplenty.setCreditials({\n\tdomain: config.curlPlentyMainDomain,\n\tpassword: config.curlLoginPassword,\n\tuser: config.curlLoginUserName,\n});\n\nplenty.post(\"https://\"+config.curlPlentyMainDomain+\"/plenty/api/ui.php\", {foo: \"bar\"}, function(callResult){\n\tif(callResult.success === true){\n\t\tif(typeof callResult.resultObjects == \"array\"){\n\t\t\tif(callResult.resultObjects[0]._exceptionFound == false){\n\t\t\t\tconsole.log(\"Imported Layout From Dropbox\");\n\t\t\t}\n\t\t}\n\t}\n});\n\n```\n## API\n\n### creditialsObject\nfor logging in you have to pass a object to setCreditials with the backend domain, a username & password\n```javascript\n\t{\n\t\tdomain: string, (your main plentymarkets domain without https://)\n\t\tpassword: string, (users backend password)\n\t\tuser: string, (backend user )\n\t}\n```\n\n### responseObject\nevery callback object is build in this style.\n\n```javascript\n\t{\n\t\tsuccess: boolean, (only validates if the request was successful and the login worked - does not validate the response result)\n\t\tcall: string, (api call URL or login)\n\t\tdata: object, (response object parse XML or JSON)\n\t\texception: object (error object from curl or plentymarkets)\n\t}\n```\n\n###new PlentyCurlAPI()\ninitializes a new api object\n```javascript\n\nvar PlentyCurlAPI = require(\"node-plentymarkets-curl\");\nvar plenty = new PlentyCurlAPI();\n\n```\n\n###setCreditials\nsets the login data for the calls\nExample:\n\n```javascript\n\nplenty.setCreditials({\n\tdomain: config.curlPlentyMainDomain,\n\tpassword: config.curlLoginPassword,\n\tuser: config.curlLoginUserName,\n});\n```\n\n###setDebug(boolean)\ndisplay each call response as prettyfied JSON through console.log();\n\nExample:\n\n```javascript\n\nplenty.setDebug(true);\n```\n\nOutput after a call:\n\n```ShellSession\nDEBUG LOG START\nsuccess:   true\ndata: \n  plenty: \n    block: \n      - \n        blockNumIndex: \n          - \n            data: \n              - \n                \"\"\"\n                  \n                  \t<!-- START PlentyGuiAjaxMessage  -->\n                  \t<div id=\"ajaxRegisterOrders_Error\" class=\"PlentyGuiAjaxMessage bar_err\">\n                  \t\t\n                  \t<table id=\"PlentyGuiTable_1_id\">\n                  \t\t<tbody id=\"PlentyGuiTable_1_id_tbody\">\n                  \t<tr id=\"PlentyGuiTableRow_1_id\" class=\"PlentyGuiTableRow\">\n                  \t\t<th id=\"PlentyGuiTableHead_1_id\" class=\"PlentyGuiTableHead icon\"><br />\n                  \t\t</th>\n                  \t\t<td id=\"PlentyGuiTableData_1_id\" class=\"PlentyGuiTableData\" align=\"left\" valign=\"top\">\t\t\n                  \t\n                  \t<div id=\"PlentyGuiPane_1_id\" class=\"PlentyGuiPane\">\n                  \t\t<span id=\"PlentyGuiText_2_id\" class=\"bold PlentyGuiText\">Code 1 : Der Vorgang konnte nicht korrekt durchgeführt werden. Bitte Dateneingabe pr�fen.<br/></span>\n                  \t\t<span id=\"PlentyGuiText_1_id\" class=\"PlentyGuiText\">unknown</span>\n                  \t</div>\n                  \t\t\n                  \t\t</td>\n                  \t</tr>\n                  \t\t</tbody>\n                  \t</table>\n                  \t\n                  \t</div>\n                  \t<!-- END PlentyGuiAjaxMessage  -->\n                  \t\n                \"\"\"\n            id: \n              - shipmenty_center_register_result_pane\n            add: \n              - 0\n            $: \n              index: 0\nexception: \n\ncall:      https://myPlentyDomain.de/plenty/admin/gui_call.php\nDEBUG LOG END\n````\n\n### post(url, dataObject, callback(responseObject))\n\nmakes a POST request to the specified url\n\nExample:\n\n```javascript\n\n//imports a Layout from Dropbox\nplenty.post(\"https://myPlentyDomain.de/plenty/api/ui.php\", {foo: \"bar\"}, function(callResult){\n\tif(callResult.success === true){\n\t\tif(typeof callResult.resultObjects == \"array\"){\n\t\t\tif(callResult.resultObjects[0]._exceptionFound == false){\n\t\t\t\tconsole.log(\"Imported Layout From Dropbox\");\n\t\t\t}\n\t\t}\n\t}\n});\n```\n\n### get(url, dataObject, callback(responseObject))\n\nmakes a GET request to the specified url\n\nExample:\n\n```javascript\n\n//registers orders at DHL intraship\nplenty.get(\"https://www.myPlentyDomain.de/plenty/admin/gui_call.php\",{\n\t\"Object\" : \"mod_order/shipmentcenter2@GuiAjaxShipmentCenterRegister\",\n\t\"Params[gui]\" : \"ajaxRegisterOrders\",\n\t\"Params[result_id]\" : \"shipmenty_center_register_result_pane\",\n\t\"gwt_tab_id\" : \"1\",\n\t\"presenter_id\": \"\",\n\t\"selection\" : myOrderArray.join(\",\"),\n\t\"PageConfig[param]\" : \"search\",\n\t\"PageConfig[name]\" : \"_PC_GuiShipmentCenterBase\",\n\t\"exec.png\" : \"exec.png\",\n\t\"registerShipment[shipping_provider]\" : \"DhlIntraship\",\n\t\"addParam[status_to]\" : \"0\",\n\t\"addParam[shippingDate]\" : new moment().format(\"DD.MM.YYYY\"),\n\t\"ignorePspList\" : \"1\",\n\t\"addParam[billing_nr]\" : \"0000000000_00_00\",\n\t\"addParam[service_option]\" : \"auto\"\n}, function(out){\n\tif(out.success){\n\t\t//handle XML result\n\t}\n})\n```",
  "readmeFilename": "README.md",
  "gitHead": "900874aff96b32d565695f2f1a1953117c918b0a",
  "_id": "node-plentymarkets-curl@0.0.2",
  "_shasum": "4b2a225e406b88c99a9e6e3f051f3278d1f68590",
  "_from": "node-plentymarkets-curl@^0.0.2"
}
